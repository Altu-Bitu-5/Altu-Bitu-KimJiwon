# 1   1  1   1  1   1  1   1  1   1  1   1  1
#   2      2      2      2      2      2
#      4              4             4
#             8
#
"""
    물병의 개수를 최소로 만들기 위해서, 물병을 구매해 같은 물L끼리 합쳐야 한다.
    위 예시의 경우, 1L짜리 물을 1개 + 2L짜리 물 2개를 더 사면 물통 3개였던 물통을 1개로 만들수 있게 된다.
    이를 이진수로 표현해보면,
    13 = 1101 -> 3개로, 1의 개수가 물통의 개수이다.
    따라서 1을 없애는(1에다가 1을 더해) 작업이 필요하다.

    이때 1을 오른쪽부터 더해야(왼쪽부터하면 8을 더하는 것을 의미)한다.
"""
n, k = map(int, input().split())
ans = 0
while bin(n).count("1") > k:
    idx = bin(n)[::-1].index("1")  # 1이 오른쪽에서 몇 번째에 있는지 찾기
    ans += 2**idx  # 2 ^ (idx) 만큼 더하기
    n += 2**idx  # 2 ^ (idx) 만큼 더하기
print(ans)


# n의 i번째 비트가 1인지
# n & (1<<i)
