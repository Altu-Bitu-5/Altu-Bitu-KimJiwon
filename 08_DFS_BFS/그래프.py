"""
    그래프 알고리즘
    1. 정점 사이의 최단 거리를 구해야 할 때 -> 최단 경로 알고리즘(다익스트라, 플로이드)
    2. 사이클이 없는 그래프를 다룰 때-> 트리
    3. 가중치의 총 합이 가장 작은 트리를 만들어야 할 때 -> 최소 비용 신장 트리
    4. 방향 그래프에서 선후관계를 기반으로 정점을 나열해야 할 때 -> 위상 정렬
    5. 그래프에서 정점 사이의 관계를 서로소로 정의해 집합으로 나누어야 할 때 -> 유니온 파인드
    
"""
"""
    그래프는  인접행렬 / 인접 리스트로 구현 가능
    깊이 우선 탐색이라 불리는 DFS와 너비 우선 탐색이라 불리는 BFS가 대표적인 탐색 알고리즘
    DFS는 스택 & 재귀를 통해 구현, BFS 큐(deque 사용)를 통해 구현
    DFS(백트래킹과 차이 둘 것)와 BFS 모두 방문 체크 꼭 필요
    모든 노드를 방문할 때는 DFS나 BFS 상관없음
    가중치가 주어지거나 특정경로를 찾을 때, 모든 경우를 거의 다 봐야할 때는 DFS
    최단 거리를 구할때는 BFS 사용: BFS는 현재 노드에서 가장 가까운 자식노드부터 탐색하기 때문(자식부터 순차 탐색)
    그래프가 단방향인지 양방향인지 체크 
"""
